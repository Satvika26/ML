# Import necessary libraries
import cv2
import pytesseract
import matplotlib.pyplot as plt
from google.colab import files

# Upload the image
uploaded = files.upload()

# Check the uploaded files and set the image path
image_path = list(uploaded.keys())[0]  # Automatically get the first uploaded file
print(f'Uploaded file: {image_path}')  # Debugging statement

# Load the image containing handwritten text
image = cv2.imread(image_path)

# Check if the image is loaded properly
if image is None:
    raise ValueError("Image not loaded. Please check the uploaded file.")

# Convert the image to grayscale
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Apply Gaussian Blur to reduce noise
blurred_image = cv2.GaussianBlur(gray_image, (5, 5), 0)

# Use Otsu's thresholding
_, thresh_image = cv2.threshold(blurred_image, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)

# Optional: Dilation to enhance text
kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (3, 3))
dilated_image = cv2.dilate(thresh_image, kernel, iterations=1)

# Use Tesseract to do OCR on the preprocessed image
custom_config = r'--oem 3 --psm 6'  # Experiment with different configurations
recognized_text = pytesseract.image_to_string(dilated_image, config=custom_config)

# Display the original and processed images
plt.figure(figsize=(10, 6))
plt.subplot(1, 2, 1)
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
plt.title('Original Image')
plt.axis('off')

plt.subplot(1, 2, 2)
plt.imshow(dilated_image, cmap='gray')
plt.title('Processed Image')
plt.axis('off')

plt.show()

# Print the recognized text
print("Recognized Text:")
print(recognized_text)
